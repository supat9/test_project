generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model orderdetails {
  order_detail_id Int      @id @default(autoincrement())
  order_id        Int
  product_id      Int
  quantity        Int
  unit_price      Decimal  @db.Decimal(10, 2)
  orders          orders   @relation(fields: [order_id], references: [order_id], onDelete: Cascade, onUpdate: NoAction, map: "orderdetails_ibfk_1")
  products        products @relation(fields: [product_id], references: [product_id], onDelete: NoAction, onUpdate: NoAction, map: "orderdetails_ibfk_2")

  @@index([order_id], map: "order_id")
  @@index([product_id], map: "product_id")
}

model orders {
  order_id     Int            @id @default(autoincrement())
  user_id      Int
  order_date   DateTime?      @default(now()) @db.Timestamp(0)
  total_amount Decimal        @db.Decimal(10, 2)
  status       orders_status? @default(processing)
  orderdetails orderdetails[]
  users        users          @relation(fields: [user_id], references: [user_id], onDelete: Cascade, onUpdate: NoAction, map: "orders_ibfk_1")

  @@index([user_id], map: "user_id")
}

model products {
  product_id   Int            @id @default(autoincrement())
  name         String         @db.VarChar(100)
  description  String?        @db.Text
  price        Decimal        @db.Decimal(10, 2)
  category     String?        @db.VarChar(50)
  image_url    String?        @db.VarChar(255)
  orderdetails orderdetails[]
}

model users {
  user_id  Int      @id @default(autoincrement())
  username String   @unique(map: "username") @db.VarChar(100)
  password String   @db.VarChar(255)
  email    String   @unique(map: "email") @db.VarChar(100)
  orders   orders[]
}

enum orders_status {
  processing
  completed
  cancelled
}
